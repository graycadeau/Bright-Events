info:
  title: Bright Events
  description: A platform for event organizers to create and manage different types of events.

paths:
  /api/v1/auth/register:
    post:
      summary: Creates a user.
      tags:
        - POST User
      parameters:
      - in: body
        name: body
        description: JSON parameters
        schema:
          properties:
            user_name:
              type: string
              description: User name
              example: Beth
            email:
              type: string
              description: User email
              example: beth@smith.com
            password: 
              type: string
              description: User password
              example: dontgorick
            password_confirmation: 
              type: string
              description: User password confirmation
              example: dontgorick
      responses:
        '201':
          description: User created

  /api/v1/events:
    get:
      summary: Returns a list of events
      tags:
        - GET Events
      responses:
      '200':
        description: A JSON array of events
      '404':
        description: No events found
    post:
      summary: Create an event
      tags:
        - POST Event
      parameters:
      - in: body
        name: body
        description: JSON parameters
        schema:
          properties:
            title:
              type: string
              example: C.O.D WW2 Unboxing
            description:
              type: string
              example: Come try out the new installation of C.O.D
            location:
              type: string
              example: Blitz n Chitz
            date:
              type: string
              example: 3-11-2017
            category:
              type: string
              example: gaming
      responses:
      '201':
        description: Event created successfully

  /api/v1/auth/login:
    post:
      summary: Logs in a user
      tags:
      - POST User
      parameters:
        - in: body
          name: body
          description: JSON parameters
          schema:
            properties:
              user_name:
                type: string
                description: User name
                example: Morty
              password: 
                type: string
                description: User password
                example: jesmorty
      responses:
        '200':
          description: User logged in successfully

  /api/v1/auth/logout:
    post:
      summary: Logs out a user
      tags:
      - POST User
      responses:
      '200':
        description: User logged out successfully

  /api/v1/events/{event_id}:
    get:
      summary: Returns a single event
      tags:
        - GET Event
      parameters:
        - name: event_id
          in: path
          description: Id of event
          required: true
          type: integer
      responses:
      '200':
        description: A JSON object of an event
      '404':
        description: Event not found
    put:
      summary: Edit an event
      tags:
        - PUT Event
      parameters:
        - name: event_id
          in: path
          description: Id of event
          required: true
          type: integer
        - in: body
          name: body
          description: JSON parameters
          schema:
            properties:
              title:
                type: string
                example: C.O.D M.W Unboxing
              description:
                type: string
                example: Come try out C.O.D
              location:
                type: string
                example: Blitz n Chitz
              date:
                type: string
                example: 3-11-2017
              category:
                type: string
                example: gaming
      responses:
      '200':
        description: Event successfully edited
      '404':
        description: Event not found
    delete:
      summary: Deletes an event
      tags:
      - DELETE Event
      parameters:
        - name: event_id
          in: path
          description: Id of event
          required: true
          type: integer
      responses:
      '200':
        description: Event successfully deleted
      '404':
        description: Event not found
  
  /api/v1/myevents:
    get:
      summary: Returns a list of events created by the user currently logged in.
      tags:
        - GET Events
      responses:
      '200':
        description: A JSON array of events
      '404':
        description: No events found

  /api/v1/event/{event_id}/rsvp:
    post:
      summary: RSVP an event
      tags:
      - POST Event
    parameters:
        - name: event_id
          in: path
          description: Id of event
          required: true
          type: integer
    responses:
      '200':
        description: RSVP Successfull
      '404':
        description: Event not found
    get:
      summary: Returns a list of guests
      tags:
      - GET Event
    parameters:
        - name: event_id
          in: path
          description: Id of event
          required: true
          type: integer
    responses:
      '200':
        description: Found
      '404':
        description: Event not found

  /api/v1/auth/reset-password:
    post:
      summary: Reset user password
      tags:
      - POST User
    parameters:
      - in: body
        name: body
        description: JSON parameters
        schema:
          properties:
            password:
              type: string
              example: jesmorty
            new_password:
              type: string
              example: mortyjes
            password_confirmation:
              type: string
              example: mortyjes
    responses:
      '200':
        description: Found
      '404':
        description: Event not found

  /api/v1/auth/delete:
    delete:
      summary: Deletes a user
      tags:
      - DELETE User
      